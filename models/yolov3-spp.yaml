# Ultralytics YOLOv3 🚀, AGPL-3.0 license

# 参数
nc: 80  # 类别数量
depth_multiple: 1.0  # 模型深度倍数
width_multiple: 1.0  # 层通道倍数
anchors:  # 锚框
  - [10, 13, 16, 30, 33, 23]  # P3/8层的锚框
  - [30, 61, 62, 45, 59, 119]  # P4/16层的锚框
  - [116, 90, 156, 198, 373, 326]  # P5/32层的锚框

# darknet53骨干网络
backbone:
  # [from, number, module, args]
  [
    [-1, 1, Conv, [32, 3, 1]],  # 0，卷积层：输入通道数32，卷积核3x3，步长1
    [-1, 1, Conv, [64, 3, 2]],  # 1，卷积层：输入通道数64，卷积核3x3，步长2，P1/2层
    [-1, 1, Bottleneck, [64]],  # Bottleneck层：输入通道数64
    [-1, 1, Conv, [128, 3, 2]],  # 3，卷积层：输入通道数128，卷积核3x3，步长2，P2/4层
    [-1, 2, Bottleneck, [128]],  # Bottleneck层：输入通道数128
    [-1, 1, Conv, [256, 3, 2]],  # 5，卷积层：输入通道数256，卷积核3x3，步长2，P3/8层
    [-1, 8, Bottleneck, [256]],  # Bottleneck层：输入通道数256，重复8次
    [-1, 1, Conv, [512, 3, 2]],  # 7，卷积层：输入通道数512，卷积核3x3，步长2，P4/16层
    [-1, 8, Bottleneck, [512]],  # Bottleneck层：输入通道数512，重复8次
    [-1, 1, Conv, [1024, 3, 2]],  # 9，卷积层：输入通道数1024，卷积核3x3，步长2，P5/32层
    [-1, 4, Bottleneck, [1024]],  # 10，Bottleneck层：输入通道数1024，重复4次
  ]

# YOLOv3-SPP头部
head: [
    [-1, 1, Bottleneck, [1024, False]],  # Bottleneck层：输入通道数1024
    [-1, 1, SPP, [512, [5, 9, 13]]],  # SPP层：输入通道数512，池化核尺寸5, 9, 13
    [-1, 1, Conv, [1024, 3, 1]],  # 卷积层：输入通道数1024，卷积核3x3
    [-1, 1, Conv, [512, 1, 1]],  # 卷积层：输入通道数512，卷积核1x1
    [-1, 1, Conv, [1024, 3, 1]],  # 15，卷积层：输入通道数1024，卷积核3x3，(P5/32-large)

    [-2, 1, Conv, [256, 1, 1]],  # 卷积层：输入通道数256，卷积核1x1
    [-1, 1, nn.Upsample, [None, 2, "nearest"]],  # 上采样层：倍增2
    [[-1, 8], 1, Concat, [1]],  # 拼接层：连接P4
    [-1, 1, Bottleneck, [512, False]],  # Bottleneck层：输入通道数512
    [-1, 1, Bottleneck, [512, False]],  # Bottleneck层：输入通道数512
    [-1, 1, Conv, [256, 1, 1]],  # 卷积层：输入通道数256，卷积核1x1
    [-1, 1, Conv, [512, 3, 1]],  # 22，卷积层：输入通道数512，卷积核3x3，(P4/16-medium)

    [-2, 1, Conv, [128, 1, 1]],  # 卷积层：输入通道数128，卷积核1x1
    [-1, 1, nn.Upsample, [None, 2, "nearest"]],  # 上采样层：倍增2
    [[-1, 6], 1, Concat, [1]],  # 拼接层：连接P3
    [-1, 1, Bottleneck, [256, False]],  # Bottleneck层：输入通道数256
    [-1, 2, Bottleneck, [256, False]],  # 27，Bottleneck层：输入通道数256，重复2次（P3/8-small）

    [[27, 22, 15], 1, Detect, [nc, anchors]],  # 检测层：检测P3、P4、P5
]
